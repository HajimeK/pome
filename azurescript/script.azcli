az login
az group create --location japaneast --name pome --subscription "Azure subscription 1"
az group exists --name pome
az storage account create --name storagepome --resource-group pome --location japaneast --sku Standard_LRS
az functionapp create --functions-version 3 --resource-group pome --name funcPome --storage-account storagepome --os-type Linux --consumption-plan-location japaneast --runtime node --runtime-version 12

cd git
cd nd081-c2-Building-and-deploying-cloud-native-applications-from-scratch-project-starter/
cd NeighborlyAPI/

az aks create --name azuredevprj2aks --resource-group rg_azuredevprj2 --node-count 1 --generate-ssh-keys --location centralus 
az aks get-credentials --name azuredevprj2aks --resource-group rg_azuredevprj2
az acr create --resource-group rg_azuredevprj2 --name azuredevprj2funcreg --sku Basic
func init --docker-create --python
sudo docker build -t azuredevprj2docker .
sudo docker images
sudo docker tag azuredevprj2docker azuredevprj2funcreg.azurecr.io/azuredevprj2docker:v1
az login
az acr login --name azuredevprj2funcreg
sudo docker push azuredevprj2funcreg.azurecr.io/azuredevprj2docker:v1
az acr repository list --name azuredevprj2funcreg.azurecr.io --output table
az aks get-credentials --name azuredevprj2aks --resource-group rg_azuredevprj2
func kubernetes install --namespace keda
kubectl get nodes
sudo func kubernetes deploy --name azuredevprj2aks --image-name azuredevprj2funcreg.azurecr.io/azuredevprj2docker:v1 --dry-run --python > deploy.yaml
#sudo func kubernetes deploy --name azuredevprj2aks --image-name azuredevprj2funcreg.azurecr.io/azuredevprj2docker:v1 --polling-interval 3 --cooldown-period 5 --python
kubectl apply -f deploy.yaml

kubectl get service --watch
kubectl get service
